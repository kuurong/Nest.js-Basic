var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.12,1,1.894]],["body/controllers/AppController.html",[0,1.835,1,3.103,2,1.494,3,0.573,4,0.5,5,0.5,6,3.339,7,0.704,8,0.037,9,1.008,10,2.683,11,3.339,12,0.573,13,0.076,14,3.339,15,1.82,16,0.031,17,0.031]],["title/modules/AppModule.html",[18,1.12,19,1.894]],["body/modules/AppModule.html",[1,2.859,2,1.477,3,0.411,4,0.359,5,0.359,7,0.758,8,0.037,9,0.723,10,2.67,11,2.394,12,0.411,13,0.055,16,0.025,17,0.025,18,1.691,19,3.651,20,1.305,21,1.305,22,1.613,23,1.613,24,1.305,25,2.545,26,1.613,27,2.394,28,2.394,29,2.394,30,2.67,31,2.975,32,2.408,33,2.224,34,1.613,35,1.447,36,2.9,37,2.498,38,2.9,39,2.9,40,2.9,41,2.9]],["title/injectables/AppService.html",[10,1.513,42,1.12]],["body/injectables/AppService.html",[3,0.548,4,0.479,5,0.479,7,0.548,8,0.037,9,0.965,10,2.413,12,0.548,13,0.073,16,0.03,17,0.03,42,1.786,43,2.153,44,3.197,45,0.871,46,2.413,47,5.524,48,1.177,49,3.873,50,1.932,51,1.621,52,1.932,53,3.873,54,3.873]],["title/controllers/AuthController.html",[0,1.12,55,1.894]],["body/controllers/AuthController.html",[0,1.43,2,1.43,3,0.548,4,0.479,5,0.479,7,0.685,8,0.037,9,0.965,12,0.548,13,0.073,15,1.743,16,0.03,17,0.03,55,3.021,56,3.197,57,2.751,58,4.836,59,2.374,60,3.197,61,3.873,62,2.153,63,2.153,64,2.419,65,2.153]],["title/modules/AuthModule.html",[18,1.12,30,1.513]],["body/modules/AuthModule.html",[2,1.567,3,0.448,4,0.391,5,0.391,7,0.724,8,0.037,9,0.789,12,0.448,13,0.06,16,0.026,17,0.026,18,1.768,20,1.425,21,1.425,22,1.76,23,1.76,24,1.425,25,2.663,26,2.663,30,2.799,32,1.91,33,2.36,34,1.76,35,1.579,37,1.977,55,2.991,59,2.668,60,2.613,66,2.613,67,2.613,68,2.613,69,3.165,70,2.651,71,3.165,72,2.613]],["title/injectables/AuthService.html",[42,1.12,59,1.365]],["body/injectables/AuthService.html",[3,0.379,4,0.331,5,0.331,7,0.535,8,0.037,9,0.667,12,0.379,13,0.05,15,1.205,16,0.023,17,0.023,42,1.396,43,1.488,45,0.602,46,1.887,48,1.333,50,1.887,51,1.892,52,1.887,59,1.702,62,2.103,63,1.488,65,1.488,70,1.672,73,2.209,74,2.901,75,3.933,76,4.384,77,2.209,78,2.268,79,2.676,80,2.103,81,2.103,82,1.15,83,1.396,84,2.676,85,2.676,86,3.781,87,3.619,88,2.438,89,2.676,90,1.672,91,2.209,92,2.209,93,2.209,94,2.209,95,2.686,96,2.676,97,2.676,98,1.902,99,2.676,100,3.781,101,2.209]],["title/classes/CreatePostDto.html",[13,0.057,102,1.686]],["body/classes/CreatePostDto.html",[3,0.201,4,0.175,5,0.175,7,0.573,8,0.038,12,0.201,13,0.056,16,0.014,17,0.014,45,0.318,48,1.445,51,1.722,82,1.602,83,1.836,101,3.109,102,1.291,103,0.637,104,1.169,105,1.328,106,2.436,107,2.951,108,2.951,109,3.528,110,2.951,111,2.951,112,3.767,113,2.096,114,2.951,115,2.817,116,2.139,117,1.416,118,1.416,119,1.416,120,1.416,121,2.132,122,1.416,123,2.951,124,1.917,125,1.917,126,2.322,127,1.416,128,1.416,129,1.416,130,1.416,131,1.416,132,1.416,133,2.951,134,1.169,135,2.322,136,2.322,137,2.322,138,2.528,139,2.322,140,2.322,141,1.416,142,1.416,143,1.416,144,1.416,145,1.416,146,3.413,147,3.413,148,1.917,149,2.322,150,2.322,151,2.322,152,2.322,153,2.322,154,2.322,155,2.322,156,1.416,157,2.436,158,1.416,159,1.416,160,1.416,161,1.416,162,3.413,163,1.416,164,1.169,165,1.536,166,1.917,167,1.416,168,1.416,169,2.951,170,1.416,171,2.322,172,2.322,173,2.353,174,3.036,175,2.676,176,2.322,177,1.169,178,1.169,179,2.322,180,0.707,181,1.006,182,1.416,183,1.416,184,1.416,185,3.109,186,3.683,187,0.707,188,1.169,189,1.416,190,1.416,191,1.416,192,1.416,193,1.416,194,1.416,195,1.416,196,1.169,197,1.416,198,1.416,199,1.917,200,1.416,201,1.45,202,1.169,203,1.416,204,1.416,205,1.416,206,1.416,207,1.416,208,1.416]],["title/classes/CreatePostMetaOptionsDto.html",[13,0.057,121,1.894]],["body/classes/CreatePostMetaOptionsDto.html",[3,0.518,4,0.452,5,0.452,7,0.518,8,0.037,12,0.518,13,0.088,16,0.029,17,0.029,45,0.823,48,1.419,51,1.564,82,1.419,103,1.647,105,2.1,116,2.1,121,2.914,173,3.38,175,3.315,180,1.826,199,4.241,201,3.209,209,3.02,210,3.658,211,3.658,212,3.658]],["title/classes/CreateUserDto.html",[13,0.057,213,1.686]],["body/classes/CreateUserDto.html",[3,0.375,4,0.327,5,0.327,7,0.375,8,0.037,12,0.375,13,0.071,16,0.023,17,0.023,45,0.595,48,1.442,51,1.83,82,1.442,83,1.386,87,3.597,90,2.722,103,1.191,105,1.689,116,2.134,148,3.097,173,2.961,174,2.666,175,3.556,177,3.097,178,2.185,180,1.321,196,3.097,213,2.086,214,2.185,215,3.597,216,4.358,217,2.647,218,2.647,219,2.647,220,2.647,221,2.647,222,2.647,223,2.647,224,3.752,225,3.752,226,3.752,227,3.752,228,3.752,229,5.198,230,2.086,231,3.752,232,3.752,233,3.752,234,2.647,235,3.752,236,2.647,237,3.752,238,2.647]],["title/classes/GetUsersParamDto.html",[13,0.057,239,1.686]],["body/classes/GetUsersParamDto.html",[3,0.462,4,0.404,5,0.404,7,0.689,8,0.038,12,0.462,13,0.091,16,0.027,17,0.027,45,0.734,48,0.993,51,1.094,82,1.479,83,1.6,88,2.998,95,3.078,103,1.469,105,1.95,116,1.469,134,2.695,138,2.706,165,1.469,174,3.078,180,1.629,181,2.32,186,3.576,187,1.629,230,2.88,239,2.409,240,2.695,241,4.333,242,3.265,243,3.265,244,3.576,245,2.695]],["title/classes/PatchPostDto.html",[13,0.057,246,1.894]],["body/classes/PatchPostDto.html",[3,0.464,4,0.405,5,0.405,7,0.764,8,0.038,12,0.464,13,0.082,16,0.027,17,0.027,45,0.737,48,0.997,82,0.997,88,3.002,102,1.824,103,1.476,105,1.956,116,1.476,164,2.707,165,1.476,173,2.714,180,1.636,185,3.587,187,2.168,188,2.707,230,2.416,244,3.587,246,2.714,247,2.707,248,3.587,249,4.345,250,2.714,251,4.345,252,3.279,253,3.279,254,2.707,255,3.279,256,3.279]],["title/classes/PatchUserDto.html",[13,0.057,257,1.894]],["body/classes/PatchUserDto.html",[3,0.543,4,0.474,5,0.474,7,0.68,8,0.038,12,0.543,13,0.072,16,0.03,17,0.03,83,1.415,103,1.725,202,3.163,213,2.672,248,3.966,254,3.163,257,3.001,258,3.163,259,4.804,260,3.832,261,3.163,262,3.163]],["title/controllers/PostsController.html",[0,1.12,263,1.894]],["body/controllers/PostsController.html",[0,0.779,2,0.779,3,0.299,4,0.261,5,0.261,7,0.646,8,0.038,9,0.526,12,0.299,13,0.04,15,0.95,16,0.02,17,0.02,45,0.474,46,1.586,48,1.163,50,1.908,51,1.281,52,1.053,57,1.499,62,1.173,63,1.173,64,1.318,65,1.173,74,2.916,80,2.126,81,2.126,82,1.163,83,1.412,102,2.668,113,2.258,116,1.721,165,1.916,166,3.513,187,1.053,246,2.997,250,2.852,263,1.985,264,1.742,265,3.178,266,3.178,267,3.178,268,3.178,269,2.11,270,3.178,271,3.178,272,2.258,273,2.11,274,3.178,275,2.11,276,2.11,277,3.178,278,2.11,279,3.178,280,2.11,281,2.624,282,2.11,283,2.624,284,3.178,285,2.11,286,2.624,287,2.11,288,2.11,289,1.742,290,1.742,291,2.624,292,1.908,293,1.742,294,3.156,295,3.156,296,1.742,297,2.11,298,2.11,299,2.11,300,2.11,301,1.742,302,2.11,303,2.11,304,2.11,305,2.624,306,2.624,307,2.11,308,2.11,309,2.11,310,2.11,311,2.11]],["title/modules/PostsModule.html",[18,1.12,31,1.686]],["body/modules/PostsModule.html",[2,1.549,3,0.441,4,0.385,5,0.385,7,0.774,8,0.038,9,0.775,12,0.441,13,0.059,16,0.026,17,0.026,18,1.876,20,1.4,21,1.4,22,1.73,23,1.73,24,1.4,25,2.639,26,1.73,31,3.158,32,2.46,33,2.333,34,1.73,35,1.552,37,2.62,64,1.943,72,2.568,263,2.965,292,2.727,293,2.568,312,2.568,313,2.568,314,3.111,315,3.111,316,3.111]],["title/injectables/PostsService.html",[42,1.12,292,1.513]],["body/injectables/PostsService.html",[3,0.404,4,0.353,5,0.353,7,0.56,8,0.038,9,0.712,12,0.404,13,0.054,15,1.285,16,0.024,17,0.024,42,1.461,43,1.588,45,0.642,46,1.974,48,1.203,50,1.425,51,1.521,52,1.425,62,2.2,63,1.588,64,2.471,65,1.588,74,2.524,77,2.357,78,2.169,80,2.2,81,2.2,82,1.203,83,1.461,92,2.357,95,3.783,98,2.028,106,3.265,115,3.265,281,2.357,292,1.974,317,2.357,318,3.265,319,2.855,320,3.956,321,2.855,322,3.265,323,2.855,324,2.855,325,2.028]],["title/controllers/UsersController.html",[0,1.12,326,1.894]],["body/controllers/UsersController.html",[0,0.484,2,0.484,3,0.186,4,0.162,5,0.162,7,0.552,8,0.038,9,0.327,12,0.309,13,0.041,14,1.083,15,0.59,16,0.013,17,0.013,45,0.295,46,1.087,48,0.85,50,1.395,51,0.937,52,1.945,57,0.932,74,2.642,78,1.139,80,1.555,81,2.168,82,1.256,83,1.203,88,2.297,90,0.819,113,0.932,116,1.258,124,2.688,125,2.688,138,2.034,165,1.755,187,0.654,201,1.746,213,2.297,230,2.574,239,2.168,250,2.435,257,2.702,272,1.548,286,1.799,289,2.688,290,2.983,291,2.308,294,1.799,295,1.799,296,1.083,301,1.083,305,1.083,306,1.083,322,2.688,325,1.986,326,1.746,327,1.083,328,3.256,329,2.796,330,2.179,331,1.312,332,1.312,333,1.312,334,3.706,335,3.289,336,1.312,337,2.179,338,2.179,339,2.179,340,1.312,341,1.312,342,4.325,343,3.256,344,1.312,345,3.614,346,1.312,347,1.312,348,1.312,349,1.312,350,1.312,351,2.796,352,1.312,353,1.312,354,1.312,355,1.083,356,1.312,357,1.083,358,2.796,359,1.312,360,1.312,361,1.312,362,1.312,363,1.312,364,1.312,365,2.796,366,2.796,367,1.312,368,1.312,369,1.312,370,1.312,371,1.312,372,1.312,373,1.083,374,1.312,375,1.312,376,1.312,377,1.312,378,1.312,379,2.179,380,1.312,381,1.312,382,1.312,383,1.312,384,1.312,385,1.312,386,2.796,387,1.312,388,2.179,389,2.179,390,1.312,391,1.312,392,1.312,393,1.312,394,1.312,395,1.312,396,1.083,397,1.312]],["title/modules/UsersModule.html",[18,1.12,32,1.365]],["body/modules/UsersModule.html",[2,1.545,3,0.439,4,0.383,5,0.383,7,0.718,8,0.037,9,0.772,12,0.592,13,0.058,16,0.026,17,0.026,18,1.749,20,1.394,21,1.394,22,1.723,23,1.723,24,1.394,25,2.634,26,2.634,30,2.087,32,2.511,33,2.326,34,1.723,35,1.546,37,1.935,70,2.613,78,2.406,326,2.958,357,2.557,398,2.557,399,2.557,400,2.557,401,3.098,402,3.098,403,3.098,404,3.098]],["title/injectables/UsersService.html",[42,1.12,78,1.235]],["body/injectables/UsersService.html",[3,0.337,4,0.294,5,0.294,7,0.581,8,0.038,9,0.593,12,0.337,13,0.045,15,1.071,16,0.021,17,0.021,42,1.283,43,1.323,45,0.535,46,1.734,48,1.248,50,1.734,51,1.609,52,1.734,59,2.389,62,1.932,63,1.323,65,1.323,70,1.486,74,2.788,75,1.964,78,1.415,80,2.282,81,2.282,82,1.248,83,1.516,88,2.282,90,2.819,91,1.964,93,1.964,98,1.69,215,3.726,230,2.879,239,2.788,245,1.964,318,3.388,325,1.69,334,3.388,335,2.916,355,1.964,396,1.964,405,1.964,406,3.474,407,2.379,408,2.379,409,2.379,410,2.379,411,3.474,412,2.379,413,2.379,414,2.379,415,2.379,416,3.474,417,3.474]],["title/coverage.html",[418,2.929]],["body/coverage.html",[0,1.819,1,1.804,5,0.357,6,2.385,8,0.037,10,1.442,13,0.101,16,0.025,17,0.025,24,1.3,42,1.819,44,2.385,55,1.804,56,2.385,59,1.3,73,2.385,78,1.177,82,0.878,102,1.606,104,2.385,121,1.804,209,2.385,213,1.606,214,2.385,239,1.606,240,2.385,246,1.804,247,2.385,257,1.804,258,2.385,263,1.804,264,2.385,272,2.053,292,1.442,317,2.385,326,1.804,327,2.385,405,2.385,418,2.053,419,2.385,420,2.889,421,2.889,422,5.951,423,4.926,424,4.568,425,4.926,426,2.385,427,2.889,428,2.889,429,3.988,430,2.889,431,2.889,432,2.889]],["title/dependencies.html",[21,1.639,433,2.096]],["body/dependencies.html",[8,0.038,9,0.96,13,0.091,16,0.03,17,0.03,21,1.734,180,1.922,181,2.737,187,1.922,261,3.18,262,3.18,434,3.852,435,3.852,436,5.261,437,3.852,438,3.852,439,3.852,440,3.852,441,3.852,442,3.852,443,3.852,444,3.852,445,3.852,446,3.852,447,3.852,448,3.852]],["title/miscellaneous/enumerations.html",[449,1.586,450,3.007]],["body/miscellaneous/enumerations.html",[8,0.037,16,0.029,17,0.029,45,0.835,109,3.889,157,3.889,201,3.684,250,2.943,335,3.347,449,2.32,450,3.066,451,3.714,452,3.714,453,3.714,454,4.711,455,4.711,456,4.711,457,4.711,458,3.714,459,4.711,460,4.711]],["title/miscellaneous/functions.html",[449,1.586,461,3.007]],["body/miscellaneous/functions.html",[8,0.033,16,0.033,17,0.033,24,2.539,45,1.017,426,3.733,449,2.825,461,3.733,462,4.522]],["title/index.html",[45,0.571,463,2.539,464,2.539]],["body/index.html",[4,0.281,8,0.035,16,0.021,17,0.021,35,2.204,94,3.646,138,2.498,165,1.024,283,1.878,373,2.775,418,1.616,419,1.878,465,2.275,466,2.275,467,3.999,468,2.275,469,2.275,470,2.275,471,2.275,472,2.275,473,2.275,474,3.999,475,2.275,476,2.275,477,2.275,478,4.417,479,2.275,480,5.104,481,2.275,482,5.104,483,2.275,484,2.275,485,2.275,486,3.362,487,2.275,488,2.275,489,2.275,490,3.999,491,2.275,492,3.362,493,2.275,494,2.275,495,2.275,496,2.275,497,2.275,498,2.275,499,2.275,500,2.275,501,4.417,502,3.362,503,2.275,504,3.999,505,2.275,506,3.646,507,3.362,508,2.275,509,2.275,510,2.275,511,2.275,512,2.275,513,2.275,514,3.999,515,2.275,516,2.275,517,2.275,518,2.275,519,2.275,520,2.275,521,3.999,522,2.275,523,2.275,524,2.275,525,2.275,526,2.275,527,2.275,528,2.275,529,3.362,530,2.275,531,2.275,532,2.275,533,2.275,534,2.275,535,3.362,536,2.275,537,2.275,538,2.275,539,3.362,540,3.362,541,2.275,542,2.275,543,2.275,544,2.275,545,2.275,546,2.275,547,2.275,548,2.275,549,2.275,550,2.275,551,2.275,552,1.878,553,2.275,554,2.275,555,2.275,556,2.275,557,2.275,558,2.275,559,1.878]],["title/modules.html",[20,1.856]],["body/modules.html",[8,0.031,16,0.031,17,0.031,19,2.614,20,1.883,30,2.088,31,2.327,32,1.883,506,4.684,560,5.674,561,5.674,562,5.674]],["title/overview.html",[563,3.403]],["body/overview.html",[2,1.102,8,0.036,10,2.318,16,0.025,17,0.025,18,1.102,19,3.604,20,1.343,21,1.343,22,1.659,23,1.659,24,1.343,25,1.659,26,1.659,27,2.463,28,2.463,29,2.463,30,2.693,31,3.072,32,2.487,33,2.267,34,1.659,35,1.489,43,1.659,59,2.487,66,2.463,67,2.463,68,2.463,78,2.25,103,1.343,292,2.318,312,2.463,313,2.463,398,2.463,399,2.463,400,2.463,563,2.463,564,4.646,565,2.984]],["title/properties.html",[105,1.639,433,2.096]],["body/properties.html",[8,0.037,16,0.032,17,0.032,105,1.998,165,1.998,552,3.665,559,3.665,566,4.439,567,4.439,568,4.439]],["title/routes.html",[569,3.403]],["body/routes.html",[8,0.034,16,0.034,17,0.034,569,3.903]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["0",{"_index":422,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":567,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":423,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":428,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":424,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":429,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":425,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":430,"title":{},"body":{"coverage.html":{}}}],["03",{"_index":140,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["1",{"_index":367,"title":{},"body":{"controllers/UsersController.html":{}}}],["1.1.23",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":345,"title":{},"body":{"controllers/UsersController.html":{}}}],["10.0.0",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["10})@apiquery({name",{"_index":344,"title":{},"body":{"controllers/UsersController.html":{}}}],["1234",{"_index":245,"title":{},"body":{"classes/GetUsersParamDto.html":{},"injectables/UsersService.html":{}}}],["1234})@isoptional()@isint()@type(undefined",{"_index":242,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["16t07:46:32+0000",{"_index":194,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["16t07:46:32+0000'})@isiso8601()@isoptional",{"_index":141,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["2",{"_index":369,"title":{},"body":{"controllers/UsersController.html":{}}}],["2.0.5",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":394,"title":{},"body":{"controllers/UsersController.html":{}}}],["200",{"_index":286,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["201",{"_index":274,"title":{},"body":{"controllers/PostsController.html":{}}}],["2024",{"_index":139,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["4",{"_index":564,"title":{},"body":{"overview.html":{}}}],["6",{"_index":565,"title":{},"body":{"overview.html":{}}}],["7.3.0",{"_index":441,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":227,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["9",{"_index":147,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["age",{"_index":386,"title":{},"body":{"controllers/UsersController.html":{}}}],["already",{"_index":284,"title":{},"body":{"controllers/PostsController.html":{}}}],["amazing",{"_index":545,"title":{},"body":{"index.html":{}}}],["api",{"_index":301,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":294,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":270,"title":{},"body":{"controllers/PostsController.html":{}}}],["apiproperty",{"_index":185,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{}}}],["apiproperty()@isenum(poststatus)@isnotempty",{"_index":158,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@matches(/^[a",{"_index":145,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiproperty({description",{"_index":164,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{}}}],["apiproperty({enum",{"_index":130,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional",{"_index":186,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional()@isjson()@isoptional",{"_index":143,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional()@isoptional()@isarray()@isstring({each",{"_index":160,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional()@isstring()@isoptional()@apipropertyoptional",{"_index":117,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional()@isurl()@isoptional",{"_index":119,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional({description",{"_index":134,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional({type",{"_index":122,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiquery",{"_index":358,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse",{"_index":295,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":296,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags('posts",{"_index":300,"title":{},"body":{"controllers/PostsController.html":{}}}],["apitags('users",{"_index":361,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":373,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["application'})@apiresponse({status",{"_index":340,"title":{},"body":{"controllers/UsersController.html":{}}}],["applications",{"_index":473,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":19,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":10,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":123,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["auth",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":71,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":55,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":30,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":552,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":59,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["backers",{"_index":546,"title":{},"body":{"index.html":{}}}],["blog",{"_index":166,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{}}}],["board",{"_index":538,"title":{},"body":{"index.html":{}}}],["body",{"_index":290,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":562,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":560,"title":{},"body":{"modules.html":{}}}],["building",{"_index":468,"title":{},"body":{"index.html":{}}}],["channel",{"_index":509,"title":{},"body":{"index.html":{}}}],["character",{"_index":233,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["characters",{"_index":228,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["check",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["class",{"_index":13,"title":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":103,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":66,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":67,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":68,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_postsmodule",{"_index":312,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_imports",{"_index":314,"title":{},"body":{"modules/PostsModule.html":{}}}],["cluster_postsmodule_providers",{"_index":313,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":398,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":399,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":400,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["come",{"_index":498,"title":{},"body":{"index.html":{}}}],["complete",{"_index":203,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["compodoc/compodoc",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["console.log(age",{"_index":392,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log(body",{"_index":395,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log(createpostdto",{"_index":308,"title":{},"body":{"controllers/PostsController.html":{}}}],["console.log(createuserdto",{"_index":380,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log(email",{"_index":397,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log(id",{"_index":387,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log(isauth",{"_index":415,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(patchpostdto",{"_index":311,"title":{},"body":{"controllers/PostsController.html":{}}}],["const",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":407,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["constructor(usersservice",{"_index":77,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["content",{"_index":106,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('posts",{"_index":299,"title":{},"body":{"controllers/PostsController.html":{}}}],["controller('users",{"_index":360,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["courses",{"_index":516,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":418,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createpost",{"_index":266,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(@body",{"_index":307,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(createpostdto",{"_index":269,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost.dto",{"_index":255,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["createpostdto",{"_index":102,"title":{"classes/CreatePostDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["createpostmetaoptions.dto",{"_index":184,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["createpostmetaoptionsdto",{"_index":121,"title":{"classes/CreatePostMetaOptionsDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["creates",{"_index":271,"title":{},"body":{"controllers/PostsController.html":{}}}],["createuser",{"_index":328,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(@body",{"_index":379,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(createuserdto",{"_index":331,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser.dto",{"_index":260,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["createuserdto",{"_index":213,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["date",{"_index":133,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["db",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{}}}],["declarations",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":116,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":511,"title":{},"body":{"index.html":{}}}],["default",{"_index":366,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe",{"_index":352,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(1",{"_index":377,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(10",{"_index":375,"title":{},"body":{"controllers/UsersController.html":{}}}],["defined",{"_index":48,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":21,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":343,"title":{},"body":{"controllers/UsersController.html":{}}}],["description",{"_index":165,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":483,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":523,"title":{},"body":{"index.html":{}}}],["dfdf",{"_index":207,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["dfs",{"_index":208,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["discord",{"_index":508,"title":{},"body":{"index.html":{}}}],["dive",{"_index":510,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":419,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["draft",{"_index":454,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dto",{"_index":205,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["dtos/createpost.dto",{"_index":297,"title":{},"body":{"controllers/PostsController.html":{}}}],["dtos/createuser.dto",{"_index":354,"title":{},"body":{"controllers/UsersController.html":{}}}],["dtos/getusersparam.dto",{"_index":355,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/patchpost.dto",{"_index":298,"title":{},"body":{"controllers/PostsController.html":{}}}],["dtos/patchuser.dto",{"_index":356,"title":{},"body":{"controllers/UsersController.html":{}}}],["e2e",{"_index":493,"title":{},"body":{"index.html":{}}}],["each",{"_index":162,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["efficient",{"_index":469,"title":{},"body":{"index.html":{}}}],["eg.\"my",{"_index":154,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["email",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["endpoint",{"_index":363,"title":{},"body":{"controllers/UsersController.html":{}}}],["enterprise",{"_index":528,"title":{},"body":{"index.html":{}}}],["enum",{"_index":190,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enumerations",{"_index":450,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/poststatus.enum",{"_index":182,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enums/posttype.enum",{"_index":183,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["example",{"_index":138,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["existign",{"_index":309,"title":{},"body":{"controllers/PostsController.html":{}}}],["existign'})@apiresponse({status",{"_index":285,"title":{},"body":{"controllers/PostsController.html":{}}}],["exists",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{}}}],["experience",{"_index":513,"title":{},"body":{"index.html":{}}}],["export",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":248,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["false",{"_index":125,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["featuredimageurl",{"_index":107,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["fetches",{"_index":337,"title":{},"body":{"controllers/UsersController.html":{}}}],["few",{"_index":496,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["final",{"_index":362,"title":{},"body":{"controllers/UsersController.html":{}}}],["find",{"_index":323,"title":{},"body":{"injectables/PostsService.html":{}}}],["findall",{"_index":318,"title":{},"body":{"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["findall(getusersparamdto",{"_index":409,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall(userid",{"_index":320,"title":{},"body":{"injectables/PostsService.html":{}}}],["findonebyid",{"_index":406,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid(id",{"_index":411,"title":{},"body":{"injectables/UsersService.html":{}}}],["firstname",{"_index":215,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["follow",{"_index":531,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":70,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":467,"title":{},"body":{"index.html":{}}}],["full",{"_index":527,"title":{},"body":{"index.html":{}}}],["function",{"_index":427,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":461,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:id",{"_index":372,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:id/:opt",{"_index":383,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:id?')@apioperation({summary",{"_index":336,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:userid",{"_index":279,"title":{},"body":{"controllers/PostsController.html":{}}}],["gethello",{"_index":47,"title":{},"body":{"injectables/AppService.html":{}}}],["getposts",{"_index":267,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(@param('userid",{"_index":303,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(userid",{"_index":278,"title":{},"body":{"controllers/PostsController.html":{}}}],["getting",{"_index":463,"title":{"index.html":{}},"body":{}}],["getusers",{"_index":329,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(@param('id",{"_index":384,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(getusersparamdto",{"_index":333,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersparamdto",{"_index":239,"title":{"classes/GetUsersParamDto.html":{}},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["graph",{"_index":518,"title":{},"body":{"index.html":{}}}],["grow",{"_index":542,"title":{},"body":{"index.html":{}}}],["hands",{"_index":512,"title":{},"body":{"index.html":{}}}],["handy",{"_index":499,"title":{},"body":{"index.html":{}}}],["headers",{"_index":349,"title":{},"body":{"controllers/UsersController.html":{}}}],["hello",{"_index":53,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":525,"title":{},"body":{"index.html":{}}}],["here",{"_index":550,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":556,"title":{},"body":{"index.html":{}}}],["id",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":45,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["inject(forwardref",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":42,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":43,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injecting",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["installcompile",{"_index":481,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":381,"title":{},"body":{"controllers/UsersController.html":{}}}],["int",{"_index":365,"title":{},"body":{"controllers/UsersController.html":{}}}],["interact",{"_index":519,"title":{},"body":{"index.html":{}}}],["ip",{"_index":350,"title":{},"body":{"controllers/UsersController.html":{}}}],["isarray",{"_index":169,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isauth",{"_index":75,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["isemail",{"_index":235,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum",{"_index":170,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(poststatus",{"_index":193,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(posttype",{"_index":191,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isint",{"_index":244,"title":{},"body":{"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{}}}],["isiso8601",{"_index":171,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isjson",{"_index":172,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isnotempty",{"_index":173,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/PatchPostDto.html":{}}}],["isnotempty()@isstring",{"_index":210,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["isnotempty()@isstring()@isemail",{"_index":217,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotempty()@isstring()@minlength(3)@maxlength(96",{"_index":219,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotempty()@isstring()@minlength(8)@matches(/^(?=.*[a",{"_index":223,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["iso",{"_index":195,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["iso8601",{"_index":137,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isoptional",{"_index":174,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{}}}],["isstring",{"_index":175,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isoptional()@minlength(3)@maxlength(96",{"_index":221,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isurl",{"_index":176,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["items",{"_index":126,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["job",{"_index":535,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":537,"title":{},"body":{"index.html":{}}}],["join",{"_index":548,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":553,"title":{},"body":{"index.html":{}}}],["key",{"_index":199,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{}}}],["kurong",{"_index":325,"title":{},"body":{"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["kurong@mail.com",{"_index":396,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["lastname",{"_index":216,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["learn",{"_index":503,"title":{},"body":{"index.html":{}}}],["legend",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":197,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["letter",{"_index":231,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["letters",{"_index":150,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["license",{"_index":559,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":540,"title":{},"body":{"index.html":{}}}],["limit",{"_index":334,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["limt",{"_index":370,"title":{},"body":{"controllers/UsersController.html":{}}}],["linkedin",{"_index":533,"title":{},"body":{"index.html":{}}}],["list",{"_index":338,"title":{},"body":{"controllers/UsersController.html":{}}}],["localhost:3000/users",{"_index":359,"title":{},"body":{"controllers/UsersController.html":{}}}],["login",{"_index":76,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(email",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":534,"title":{},"body":{"index.html":{}}}],["loop",{"_index":530,"title":{},"body":{"index.html":{}}}],["matches",{"_index":177,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["matches(/^[a",{"_index":192,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["matching",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["maxlength",{"_index":236,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(96",{"_index":237,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["message",{"_index":148,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["metadata",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["metaoptions",{"_index":108,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["methods",{"_index":46,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minimum",{"_index":226,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength",{"_index":178,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(3",{"_index":196,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(4",{"_index":189,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["minlength(8",{"_index":238,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":449,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":539,"title":{},"body":{"index.html":{}}}],["mode",{"_index":486,"title":{},"body":{"index.html":{}}}],["module",{"_index":18,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":20,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":504,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":554,"title":{},"body":{"index.html":{}}}],["name",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":524,"title":{},"body":{"index.html":{}}}],["needs",{"_index":251,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["nest",{"_index":474,"title":{},"body":{"index.html":{}}}],["nested",{"_index":204,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["nestframework",{"_index":558,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":501,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":261,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":187,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":272,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["node.js",{"_index":466,"title":{},"body":{"index.html":{}}}],["npm",{"_index":480,"title":{},"body":{"index.html":{}}}],["number",{"_index":230,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":198,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["offer",{"_index":536,"title":{},"body":{"index.html":{}}}],["official",{"_index":514,"title":{},"body":{"index.html":{}}}],["one",{"_index":229,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["oopt",{"_index":390,"title":{},"body":{"controllers/UsersController.html":{}}}],["open",{"_index":541,"title":{},"body":{"index.html":{}}}],["opt",{"_index":389,"title":{},"body":{"controllers/UsersController.html":{}}}],["optional",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":563,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":433,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":335,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["pagination",{"_index":371,"title":{},"body":{"controllers/UsersController.html":{}}}],["param",{"_index":289,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":80,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":388,"title":{},"body":{"controllers/UsersController.html":{}}}],["parseintpipe",{"_index":351,"title":{},"body":{"controllers/UsersController.html":{}}}],["part",{"_index":526,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":254,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["partialtype(createpostdto",{"_index":249,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["partialtype(createuserdto",{"_index":259,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["password",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{}}}],["patch",{"_index":291,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["patchpostdto",{"_index":246,"title":{"classes/PatchPostDto.html":{}},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["patchuser",{"_index":330,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(@body",{"_index":382,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(patchuserdto",{"_index":347,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuserdto",{"_index":257,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["please",{"_index":507,"title":{},"body":{"index.html":{}}}],["post",{"_index":250,"title":{},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["post'})@apiresponse({status",{"_index":273,"title":{},"body":{"controllers/PostsController.html":{}}}],["postmodule",{"_index":404,"title":{},"body":{"modules/UsersModule.html":{}}}],["posts",{"_index":265,"title":{},"body":{"controllers/PostsController.html":{}}}],["posts.controller",{"_index":316,"title":{},"body":{"modules/PostsModule.html":{}}}],["posts/:userid",{"_index":302,"title":{},"body":{"controllers/PostsController.html":{}}}],["posts/posts.module",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["postscontroller",{"_index":263,"title":{"controllers/PostsController.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["postsmodule",{"_index":31,"title":{"modules/PostsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postsservice",{"_index":292,"title":{"injectables/PostsService.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"coverage.html":{},"overview.html":{}}}],["poststatus",{"_index":157,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["posttype",{"_index":109,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["posttype})@isenum(posttype)@isnotempty",{"_index":131,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["prefix",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":488,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":465,"title":{},"body":{"index.html":{}}}],["project",{"_index":478,"title":{},"body":{"index.html":{}}}],["properties",{"_index":105,"title":{"properties.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"properties.html":{}}}],["providers",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/auth.service",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["providers/posts.service",{"_index":293,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{}}}],["providers/users.service",{"_index":357,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":74,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["published",{"_index":457,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["publishon",{"_index":110,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["query",{"_index":342,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('age",{"_index":385,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('limit",{"_index":374,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('page",{"_index":376,"title":{},"body":{"controllers/UsersController.html":{}}}],["questions",{"_index":505,"title":{},"body":{"index.html":{}}}],["read",{"_index":549,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["real",{"_index":520,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":339,"title":{},"body":{"controllers/UsersController.html":{}}}],["repository",{"_index":477,"title":{},"body":{"index.html":{}}}],["required",{"_index":124,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["reset",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":497,"title":{},"body":{"index.html":{}}}],["results",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["return",{"_index":52,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":50,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["review",{"_index":456,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["routes",{"_index":569,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["run",{"_index":482,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":470,"title":{},"body":{"index.html":{}}}],["scheduled",{"_index":455,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["schema",{"_index":111,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["series",{"_index":460,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["server",{"_index":471,"title":{},"body":{"index.html":{}}}],["service",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{}}}],["setup",{"_index":479,"title":{},"body":{"index.html":{}}}],["side",{"_index":472,"title":{},"body":{"index.html":{}}}],["sidebarenabled",{"_index":200,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["slug",{"_index":112,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["small",{"_index":149,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["spaces",{"_index":153,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["special",{"_index":232,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["specific",{"_index":241,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["sponsors",{"_index":544,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":462,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../poststatus.enum.ts",{"_index":451,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../posttype.enum.ts",{"_index":452,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":44,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":49,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":56,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.module",{"_index":403,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/auth/auth.module.ts",{"_index":69,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/providers/auth.service",{"_index":413,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/auth/providers/auth.service.ts",{"_index":73,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts:12",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:20",{"_index":84,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:5",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":426,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/posts/dtos/createpost.dto.ts",{"_index":104,"title":{},"body":{"classes/CreatePostDto.html":{},"coverage.html":{}}}],["src/posts/dtos/createpost.dto.ts:105",{"_index":129,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["src/posts/dtos/createpost.dto.ts:29",{"_index":168,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["src/posts/dtos/createpost.dto.ts:36",{"_index":132,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["src/posts/dtos/createpost.dto.ts:45",{"_index":156,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["src/posts/dtos/createpost.dto.ts:50",{"_index":159,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["src/posts/dtos/createpost.dto.ts:56",{"_index":118,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["src/posts/dtos/createpost.dto.ts:61",{"_index":144,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["src/posts/dtos/createpost.dto.ts:66",{"_index":120,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["src/posts/dtos/createpost.dto.ts:74",{"_index":142,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["src/posts/dtos/createpost.dto.ts:81",{"_index":163,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["src/posts/dtos/createpostmetaoptions.dto.ts",{"_index":209,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["src/posts/dtos/createpostmetaoptions.dto.ts:6",{"_index":211,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["src/posts/dtos/createpostmetaoptions.dto.ts:9",{"_index":212,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["src/posts/dtos/patchpost.dto.ts",{"_index":247,"title":{},"body":{"classes/PatchPostDto.html":{},"coverage.html":{}}}],["src/posts/dtos/patchpost.dto.ts:13",{"_index":253,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["src/posts/enums/poststatus.enum.ts",{"_index":453,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/enums/posttype.enum.ts",{"_index":458,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/posts.controller.ts",{"_index":264,"title":{},"body":{"controllers/PostsController.html":{},"coverage.html":{}}}],["src/posts/posts.controller.ts:16",{"_index":280,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:28",{"_index":276,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:40",{"_index":288,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.module.ts",{"_index":315,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/posts/providers/posts.service.ts",{"_index":317,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{}}}],["src/posts/providers/posts.service.ts:11",{"_index":321,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/providers/posts.service.ts:5",{"_index":319,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/users/dtos/createuser.dto.ts",{"_index":214,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/createuser.dto.ts:16",{"_index":220,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/dtos/createuser.dto.ts:22",{"_index":222,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/dtos/createuser.dto.ts:27",{"_index":218,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/dtos/createuser.dto.ts:39",{"_index":234,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/dtos/getusersparam.dto.ts",{"_index":240,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["src/users/dtos/getusersparam.dto.ts:13",{"_index":243,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["src/users/dtos/patchuser.dto.ts",{"_index":258,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["src/users/providers/users.service",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["src/users/providers/users.service.ts",{"_index":405,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts:13",{"_index":410,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:32",{"_index":412,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:6",{"_index":408,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.controller.ts",{"_index":327,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:54",{"_index":346,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:63",{"_index":332,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:69",{"_index":348,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":72,"title":{},"body":{"modules/AuthModule.html":{},"modules/PostsModule.html":{}}}],["src/users/users.module.ts",{"_index":401,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":484,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":487,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":489,"title":{},"body":{"index.html":{}}}],["started",{"_index":464,"title":{"index.html":{}},"body":{}}],["starter",{"_index":476,"title":{},"body":{"index.html":{}}}],["statements",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":113,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["stay",{"_index":529,"title":{},"body":{"index.html":{}}}],["story",{"_index":459,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["string",{"_index":51,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["su",{"_index":393,"title":{},"body":{"controllers/UsersController.html":{}}}],["success",{"_index":306,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["success!'})@patch",{"_index":287,"title":{},"body":{"controllers/PostsController.html":{}}}],["success!'})@post",{"_index":275,"title":{},"body":{"controllers/PostsController.html":{}}}],["success'})@apiquery({name",{"_index":341,"title":{},"body":{"controllers/UsersController.html":{}}}],["summary",{"_index":305,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":506,"title":{},"body":{"index.html":{},"modules.html":{}}}],["suuu",{"_index":416,"title":{},"body":{"injectables/UsersService.html":{}}}],["suuu@mail.com",{"_index":417,"title":{},"body":{"injectables/UsersService.html":{}}}],["svg",{"_index":561,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":188,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{}}}],["table",{"_index":432,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":431,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":114,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["test",{"_index":492,"title":{},"body":{"index.html":{}}}],["test:covresources",{"_index":495,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":494,"title":{},"body":{"index.html":{}}}],["tests",{"_index":490,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":543,"title":{},"body":{"index.html":{}}}],["this.authservice.isauth",{"_index":414,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.postsservice.findall(userid",{"_index":304,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.usersservice.findall(getusersparamdto",{"_index":378,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyid('1234",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findonebyid(userid",{"_index":324,"title":{},"body":{"injectables/PostsService.html":{}}}],["time",{"_index":521,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":136,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["title",{"_index":115,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["title'})@isstring()@minlength(4)@isnotempty",{"_index":167,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["token",{"_index":100,"title":{},"body":{"injectables/AuthService.html":{}}}],["touch",{"_index":551,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":181,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"dependencies.html":{}}}],["true",{"_index":101,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{}}}],["true})@minlength(3",{"_index":161,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["true})@type(undefined",{"_index":128,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["twitter",{"_index":557,"title":{},"body":{"index.html":{}}}],["type",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["types",{"_index":262,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":475,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":391,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined})@isoptional()@isarray()@validatenested({each",{"_index":127,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["unit",{"_index":491,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":568,"title":{},"body":{"properties.html":{}}}],["updated",{"_index":256,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["updated'})@isint()@isnotempty",{"_index":252,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["updatepost",{"_index":268,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(@body",{"_index":310,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(patchpostdto",{"_index":282,"title":{},"body":{"controllers/PostsController.html":{}}}],["updates",{"_index":283,"title":{},"body":{"controllers/PostsController.html":{},"index.html":{}}}],["url",{"_index":155,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["user",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"injectables/PostsService.html":{}}}],["userid",{"_index":281,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["users",{"_index":322,"title":{},"body":{"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["users.controller",{"_index":402,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/id?limit=10&page=1",{"_index":364,"title":{},"body":{"controllers/UsersController.html":{}}}],["users/users.module",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["users?limit=10&page=2",{"_index":368,"title":{},"body":{"controllers/UsersController.html":{}}}],["userscontroller",{"_index":326,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":32,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":78,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":151,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["using",{"_index":522,"title":{},"body":{"index.html":{}}}],["valid",{"_index":135,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validatenested",{"_index":179,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validatenested,@type",{"_index":206,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validation",{"_index":202,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchUserDto.html":{}}}],["validationpipe",{"_index":353,"title":{},"body":{"controllers/UsersController.html":{}}}],["validator",{"_index":180,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"dependencies.html":{}}}],["value",{"_index":201,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["version",{"_index":566,"title":{},"body":{"properties.html":{}}}],["video",{"_index":515,"title":{},"body":{"index.html":{}}}],["visit",{"_index":502,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":517,"title":{},"body":{"index.html":{}}}],["void",{"_index":277,"title":{},"body":{"controllers/PostsController.html":{}}}],["watch",{"_index":485,"title":{},"body":{"index.html":{}}}],["website",{"_index":555,"title":{},"body":{"index.html":{}}}],["without",{"_index":152,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["working",{"_index":500,"title":{},"body":{"index.html":{}}}],["world",{"_index":54,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":532,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":547,"title":{},"body":{"index.html":{}}}],["z0",{"_index":146,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["z])(?=.*\\d)(?=.*[!@#$%^&*()_",{"_index":225,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["za",{"_index":224,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PostsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { PostsModule } from './posts/posts.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [UsersModule, PostsModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './providers/auth.service';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    // Injecting Auth Service\n    private readonly authService: AuthService,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './providers/auth.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService],\n  imports: [forwardRef(() => UsersModule)],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuth\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/auth.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, forwardRef, Inject } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    // Injecting usersService\n    @Inject(forwardRef(() => UsersService))\n    private readonly usersService: UsersService,\n  ) {}\n\n  public login(email: string, password: string, id: string) {\n    // check user exists in DB (usersService)\n    const user = this.usersService.findOneById('1234');\n    // login\n    // token\n    return 'TOKEN';\n  }\n\n  public isAuth() {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDto.html":{"url":"classes/CreatePostDto.html","title":"class - CreatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/createPost.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                content\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                featuredImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                metaOptions\n                            \n                            \n                                    \n                                    \n                                    \n                                postType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                publishOn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                schema\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                slug\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsString()@IsOptional()@ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/createPost.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        featuredImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsUrl()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/createPost.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        metaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePostMetaOptionsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'array', required: false, items: undefined})@IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/createPost.dto.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        postType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         postType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: postType})@IsEnum(postType)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/createPost.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        publishOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Must be a valid timestamp in ISO8601', example: '2024-03-16T07:46:32+0000'})@IsISO8601()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/createPost.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsJSON()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/createPost.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {message: 'A slug should be all small letters and uses only \"-\" and without spaces. eg.\"my-url\" '})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/createPost.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         postStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEnum(postStatus)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/createPost.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsArray()@IsString({each: true})@MinLength(3, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/createPost.dto.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the description', example: 'blog title'})@IsString()@MinLength(4)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/createPost.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsEnum,\n  IsISO8601,\n  IsJSON,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  IsUrl,\n  Matches,\n  MinLength,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { postStatus } from '../enums/postStatus.enum';\nimport { postType } from '../enums/postType.enum';\nimport { CreatePostMetaOptionsDto } from './createPostMetaOptions.dto';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class CreatePostDto {\n  @ApiProperty({\n    //swagger 에 저장됨\n    description: 'This is the description',\n    example: 'blog title',\n  })\n  @IsString()\n  @MinLength(4)\n  @IsNotEmpty()\n  title: string;\n\n  @ApiProperty({\n    enum: postType,\n  })\n  @IsEnum(postType)\n  @IsNotEmpty()\n  postType: postType;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  @Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {\n    message:\n      'A slug should be all small letters and uses only \"-\" and without spaces. eg.\"my-url\" ',\n  })\n  slug: string;\n\n  @ApiProperty()\n  @IsEnum(postStatus)\n  @IsNotEmpty()\n  status: postStatus;\n\n  @ApiPropertyOptional()\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional()\n  content?: string;\n\n  @ApiPropertyOptional()\n  @IsJSON()\n  @IsOptional()\n  schema?: string;\n\n  @ApiPropertyOptional()\n  @IsUrl()\n  @IsOptional()\n  featuredImageUrl?: string;\n\n  @ApiPropertyOptional({\n    description: 'Must be a valid timestamp in ISO8601',\n    example: '2024-03-16T07:46:32+0000',\n  })\n  @IsISO8601() // ISO DATE\n  @IsOptional()\n  publishOn?: Date;\n\n  @ApiPropertyOptional()\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @MinLength(3, { each: true }) //array 안 string의 최소length\n  tags?: string[];\n\n  @ApiPropertyOptional({\n    type: 'array',\n    required: false,\n    items: {\n      type: 'object',\n      properties: {\n        key: {\n          type: 'string',\n          example: 'sideBarEnabled',\n        },\n        value: {\n          type: 'any',\n          example: true,\n        },\n      },\n    },\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => CreatePostMetaOptionsDto) //validation을 complete 하기위해매우중요\n  //nested DTO를 사용할때는 @ValidateNested,@Type 항상둘다사용\n  metaOptions?: CreatePostMetaOptionsDto[]; //[{ key: 'dfdf'; value: 'dfs' }];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostMetaOptionsDto.html":{"url":"classes/CreatePostMetaOptionsDto.html","title":"class - CreatePostMetaOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostMetaOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/createPostMetaOptions.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/createPostMetaOptions.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/createPostMetaOptions.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty } from 'class-validator';\n\nexport class CreatePostMetaOptionsDto {\n  @IsNotEmpty()\n  @IsString()\n  key: string;\n\n  @IsNotEmpty()\n  value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/createUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/createUser.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(3)@MaxLength(96)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/createUser.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@MinLength(3)@MaxLength(96)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/createUser.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(8)@Matches(/^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+={}\\[\\]:;\"'<>,.?~`-]).+$/, {message: 'Minimum 8 characters at least one number, one letter and one special character'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/createUser.dto.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  MaxLength,\n  MinLength,\n  Matches,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(3)\n  @MaxLength(96)\n  firstName: string;\n\n  @IsString()\n  @IsOptional()\n  @MinLength(3)\n  @MaxLength(96)\n  lastName?: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(8)\n  @Matches(\n    /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+={}\\[\\]:;\"'<>,.?~`-]).+$/,\n    {\n      message:\n        'Minimum 8 characters at least one number, one letter and one special character',\n    },\n  )\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersParamDto.html":{"url":"classes/GetUsersParamDto.html","title":"class - GetUsersParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/getUsersParam.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Get user with a specific id', example: 1234})@IsOptional()@IsInt()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/getUsersParam.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsInt } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class GetUsersParamDto {\n  @ApiPropertyOptional({\n    description: 'Get user with a specific id',\n    example: 1234,\n  })\n  @IsOptional()\n  @IsInt()\n  @Type(() => Number) //string인 타입의 프로퍼티가 들어올경우 Number로 자동변환해줌\n  id?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchPostDto.html":{"url":"classes/PatchPostDto.html","title":"class - PatchPostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchPostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/patchPost.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreatePostDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The ID of the post that needs to be updated'})@IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/patchPost.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger'; //swagger에 업데이트하고싶으면 여기서 Import하기\nimport { CreatePostDto } from './createPost.dto';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsNotEmpty } from 'class-validator';\n\nexport class PatchPostDto extends PartialType(CreatePostDto) {\n  @ApiProperty({\n    description: 'The ID of the post that needs to be updated',\n  })\n  @IsInt()\n  @IsNotEmpty()\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/patchUser.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from './createUser.dto';\nimport { PartialType } from '@nestjs/mapped-types';\n\nexport class PatchUserDto extends PartialType(CreateUserDto) {\n  // CreateUserDto의 모든 프로퍼티들이 optional 로 된다\n  // validation 모두 상속됨\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostsController.html":{"url":"controllers/PostsController.html","title":"controller - PostsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/posts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                createPost\n                            \n                            \n                                    \n                                    Public\n                                getPosts\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                updatePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        createPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPost(createPostDto: CreatePostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Creates a new blog post'})@ApiResponse({status: 201, description: 'success!'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPostDto\n                                            \n                                                            CreatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        getPosts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPosts(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:userId?')\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        updatePost\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePost(patchPostDto: PatchPostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Updates a blog post already existign'})@ApiResponse({status: 200, description: 'success!'})@Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchPostDto\n                                            \n                                                            PatchPostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Post, Body, Patch } from '@nestjs/common';\nimport { PostsService } from './providers/posts.service';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreatePostDto } from './dtos/createPost.dto';\nimport { PatchPostDto } from './dtos/patchPost.dto';\n\n@Controller('posts')\n@ApiTags('Posts API')\nexport class PostsController {\n  constructor(\n    // Injecting Posts Service\n    private readonly postsService: PostsService,\n  ) {}\n\n  @Get('/:userId?') // GET posts/:userId\n  public getPosts(@Param('userId') userId: string) {\n    return this.postsService.findAll(userId);\n  }\n\n  @ApiOperation({\n    summary: 'Creates a new blog post',\n  })\n  @ApiResponse({\n    status: 201,\n    description: 'success!',\n  })\n  @Post()\n  public createPost(@Body() createPostDto: CreatePostDto) {\n    console.log(createPostDto);\n  }\n\n  @ApiOperation({\n    summary: 'Updates a blog post already existign',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'success!',\n  })\n  @Patch()\n  public updatePost(@Body() patchPostDto: PatchPostDto) {\n    console.log(patchPostDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n    Modules\n    PostsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_PostsModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/posts/posts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostsController } from './posts.controller';\nimport { PostsService } from './providers/posts.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [PostsController],\n  providers: [PostsService],\n  imports: [UsersModule], // 중요! service를 Import 하는 것이 아닌, Module을 import\n})\nexport class PostsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/providers/posts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/posts/providers/posts.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/providers/posts.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\n\n@Injectable()\nexport class PostsService {\n  constructor(\n    // Injecting Users Service\n    private readonly usersService: UsersService,\n  ) {}\n\n  public findAll(userId: string) {\n    // Users Service 필요\n    // Find A User\n    const user = this.usersService.findOneById(userId);\n    return [\n      {\n        user: user,\n        title: 'kurong',\n        content: '크롱이 사랑해',\n      },\n      {\n        user: user,\n        title: '안녕',\n        content: '안녀러럴럴ㅇ',\n      },\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                getUsers\n                            \n                            \n                                    \n                                    Public\n                                patchUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(getUsersParamDto: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id?')@ApiOperation({summary: 'Fetches a list of registered users on the application'})@ApiResponse({status: 200, description: 'Success'})@ApiQuery({name: 'limit', type: 'number', required: false, description: 'limit query desc', example: 10})@ApiQuery({name: 'page', type: 'number', required: false, description: 'page query desc', example: 10})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUsersParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        patchUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUser(patchUserDto: PatchUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PatchUserDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Post,\n  Query,\n  Patch,\n  Headers,\n  Ip,\n  ParseIntPipe,\n  DefaultValuePipe,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dtos/createUser.dto';\nimport { GetUsersParamDto } from './dtos/getUsersParam.dto';\nimport { PatchUserDto } from './dtos/patchUser.dto';\nimport { UsersService } from './providers/users.service';\nimport { ApiOperation, ApiQuery, ApiResponse, ApiTags } from '@nestjs/swagger';\n\n// localhost:3000/users\n@Controller('users')\n@ApiTags('Users API')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n  // Final endpoint - /users/id?limit=10&page=1 //id는 파라미터, ?뒤는 쿼리\n  // param id - optional, int로 바껴야함, default value 없음\n  // query limit - int, default value 10\n  // query page - int, default value 1\n  // /users?limit=10&page=2 -> return page 2 with limt of pagination 10\n\n  @Get('/:id?')\n  @ApiOperation({\n    summary: 'Fetches a list of registered users on the application',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Success',\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: 'number',\n    required: false,\n    description: 'limit query desc',\n    example: 10,\n  })\n  @ApiQuery({\n    name: 'page',\n    type: 'number',\n    required: false,\n    description: 'page query desc',\n    example: 10,\n  })\n  public getUsers(\n    @Param() getUsersParamDto: GetUsersParamDto,\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number,\n  ) {\n    return this.usersService.findAll(getUsersParamDto, limit, page);\n  }\n\n  @Post()\n  public createUser(@Body() createUserDto: CreateUserDto) {\n    console.log(createUserDto instanceof CreateUserDto, '인스턴스입니까?');\n    return 'createUser post 요청 성공';\n  }\n\n  @Patch()\n  public patchUser(@Body() patchUserDto: PatchUserDto) {\n    return patchUserDto;\n  }\n}\n\n// export class UsersController {\n//   @Get('/:id/:opt?')\n//   public getUsers(@Param('id') id: string, @Query('age') age: any) {\n//     console.log(id, 'id');\n//     // @Param() params: any\n//     // { id: 'kurong' } params\n//     // { id: 'kurong', opt: 'oopt' }\n//     // { id: 'kurong', opt: undefined }\n//     console.log(age, 'age');\n//     // { name: 'su', age: '20' } query\n//     return 'Get Users 요청 성공';\n//   }\n\n//   @Post()\n//   public createUser(@Body('이메일') email: string) {\n//     //@Body() body: any\n//     //console.log(body, 'body');\n//     // { '성': '정', '이름': '크롱', '이메일': 'kurong@mail.com' } body\n//     console.log(email);\n//     return 'Post createUser 요청 성공';\n//   }\n// }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\n\nimport { UsersController } from './users.controller';\nimport { UsersService } from './providers/users.service';\nimport { AuthModule } from 'src/auth/auth.module';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService], // PostModule 에서 쓰고싶으니까 export\n  imports: [forwardRef(() => AuthModule)],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/users.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(getUsersParamDto: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUsersParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { id: number; firstName: string; email: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, forwardRef } from '@nestjs/common';\nimport { GetUsersParamDto } from '../dtos/getUsersParam.dto';\nimport { AuthService } from 'src/auth/providers/auth.service';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    // Injecting authService\n    @Inject(forwardRef(() => AuthService))\n    private readonly authService: AuthService,\n  ) {}\n\n  public findAll(\n    getUsersParamDto: GetUsersParamDto,\n    limit: number,\n    page: number,\n  ) {\n    const isAuth = this.authService.isAuth();\n    console.log(isAuth);\n    return [\n      {\n        firstName: 'kurong',\n        email: 'kurong@mail.com',\n      },\n      {\n        firstName: 'Suuu',\n        email: 'Suuu@mail.com',\n      },\n    ];\n  }\n\n  public findOneById(id: string) {\n    return {\n      id: 1234,\n      firstName: 'Suuu',\n      email: 'Suuu@mail.com',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/posts/dtos/createPost.dto.ts\n            \n            class\n            CreatePostDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/posts/dtos/createPostMetaOptions.dto.ts\n            \n            class\n            CreatePostMetaOptionsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/posts/dtos/patchPost.dto.ts\n            \n            class\n            PatchPostDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/posts/posts.controller.ts\n            \n            controller\n            PostsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/posts/providers/posts.service.ts\n            \n            injectable\n            PostsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dtos/createUser.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dtos/getUsersParam.dto.ts\n            \n            class\n            GetUsersParamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dtos/patchUser.dto.ts\n            \n            class\n            PatchUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/providers/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.23\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : ^2.0.5\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.3.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            postStatus   (src/.../postStatus.enum.ts)\n                        \n                        \n                            postType   (src/.../postType.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/posts/enums/postStatus.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        postStatus\n                    \n                \n                        \n                            \n                                 DRAFT\n                            \n                        \n                        \n                            \n                                Value : draft\n                            \n                        \n                        \n                            \n                                 SCHEDULED\n                            \n                        \n                        \n                            \n                                Value : scheduled\n                            \n                        \n                        \n                            \n                                 REVIEW\n                            \n                        \n                        \n                            \n                                Value : review\n                            \n                        \n                        \n                            \n                                 PUBLISHED\n                            \n                        \n                        \n                            \n                                Value : published\n                            \n                        \n            \n        \n\n    src/posts/enums/postType.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        postType\n                    \n                \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : post\n                            \n                        \n                        \n                            \n                                 PAGE\n                            \n                        \n                        \n                            \n                                Value : page\n                            \n                        \n                        \n                            \n                                 STORY\n                            \n                        \n                        \n                            \n                                Value : story\n                            \n                        \n                        \n                            \n                                 SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
